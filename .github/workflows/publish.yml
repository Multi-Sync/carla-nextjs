name: Publish to npm

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Run tests
        run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get current version
        id: version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version already published
        id: check-version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          if npm view @interworky/carla-nextjs@$VERSION version 2>/dev/null; then
            echo "published=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION already published to npm, skipping publish"
          else
            echo "published=false" >> $GITHUB_OUTPUT
            echo "Version $VERSION not yet published, will publish"
          fi

      - name: Publish to npm
        if: steps.check-version.outputs.published == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create git tag
        if: steps.check-version.outputs.published == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}" || echo "Tag already exists"

      - name: Create GitHub Release
        if: steps.check-version.outputs.published == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Changes
            ${{ github.event.head_commit.message }}

            ## Installation
            ```bash
            npm install @interworky/carla-nextjs@${{ steps.version.outputs.version }}
            # or
            npx @interworky/carla-nextjs@latest install
            ```

            ## Documentation
            - [Getting Started](https://multi-sync.github.io/carla-nextjs/guide/getting-started)
            - [Examples](https://multi-sync.github.io/carla-nextjs/examples/)
            - [CLI Reference](https://multi-sync.github.io/carla-nextjs/reference/cli)

            **Full Changelog**: https://github.com/${{ github.repository }}/commits/v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
