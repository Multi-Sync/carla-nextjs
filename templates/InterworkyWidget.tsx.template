'use client';

import { useEffect } from 'react';
import { usePathname } from 'next/navigation';

const SCRIPT_SRC = 'https://storage.googleapis.com/multisync/interworky/production/interworky.js';
const API_KEY = '{{API_KEY}}';

declare global {
  interface Window {
    Interworky?: {
      init?: () => void;
      remove?: () => void;
    };
  }
}

export default function InterworkyWidget() {
  const pathname = usePathname();

  useEffect(() => {
    // Only load the script after the page has fully loaded to not block rendering
    let timeoutId: NodeJS.Timeout;

    {{ROUTE_CONDITION}}
      // Delay script loading to prioritize core content rendering
      timeoutId = setTimeout(() => {
        const script = document.createElement('script');
        script.src = SCRIPT_SRC;
        script.dataset.apiKey = API_KEY;
        script.dataset.position = 'bottom-50 right-50';
{{LANDING_FLAG}}        script.async = true;
        script.defer = true; // Add defer attribute

        script.onload = () => {
          // Initialize after a small delay to not interfere with main thread during initial render
          setTimeout(() => {
            window.Interworky?.init?.();
          }, 100);
        };

        script.onerror = e => {
          console.error('Interworky Plugin failed to load', e);
        };

        document.body.appendChild(script); // Append to body instead of head for better performance
      }, {{DELAY}}); // Delay loading until after critical content is rendered
    {{ROUTE_CONDITION_END}}

    return () => {
      if (timeoutId) clearTimeout(timeoutId);
      window.Interworky?.remove?.();
      document.querySelectorAll('script[data-api-key]').forEach(s => s.remove());
    };
  }, [pathname]);

  return null;
}
